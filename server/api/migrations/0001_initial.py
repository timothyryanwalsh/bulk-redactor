# Generated by Django 2.0.9 on 2018-12-10 21:33

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BEConfig',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('regex_file', models.FileField(blank=True, null=True, upload_to='regex_files/')),
                ('ssn_mode', models.IntegerField(choices=[(0, 'Labeled "SSN:" (strictest)'), (1, 'No SSN, dashes required (default)'), (2, 'No dashes required (least strict)')], default=1)),
                ('pii_scanners', models.BooleanField(default=True)),
                ('web_scanners', models.BooleanField(default=False)),
                ('exif_gps_scanners', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BESession',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('source_path', models.TextField()),
                ('disk_image', models.BooleanField(default=False)),
                ('named_entity_extraction', models.BooleanField(default=False)),
                ('feature_files_path', models.TextField(blank=True)),
                ('annotated_feature_files_path', models.TextField(blank=True)),
                ('dfxml_path', models.TextField(blank=True)),
                ('started', models.DateTimeField(auto_now_add=True)),
                ('processing_failure', models.BooleanField(default=False)),
                ('processing_complete', models.BooleanField(default=False)),
                ('be_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='api.BEConfig')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feature_file', models.CharField(max_length=50)),
                ('forensic_path', models.TextField(blank=True)),
                ('offset', models.TextField(blank=True)),
                ('feature', models.TextField(blank=True)),
                ('context', models.TextField(blank=True)),
                ('note', models.TextField(blank=True)),
                ('cleared', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.TextField(blank=True)),
                ('filepath', models.TextField(blank=True)),
                ('date_modified', models.CharField(blank=True, max_length=50)),
                ('date_created', models.CharField(blank=True, max_length=50)),
                ('note', models.TextField(blank=True)),
                ('mime_type', models.CharField(blank=True, max_length=200)),
                ('allocated', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('be_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='api.BESession')),
            ],
        ),
        migrations.CreateModel(
            name='RedactedSet',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('redaction_type', models.IntegerField(choices=[(0, 'Log only'), (1, 'Remove files'), (2, 'Redact features (scrub)'), (3, 'Redact features (replace)'), (4, 'Redact features within disk image')], default=1)),
                ('unallocated_files', models.BooleanField(default=False)),
                ('redacted_set_path', models.TextField(blank=True)),
                ('processing_failure', models.BooleanField(default=False)),
                ('processing_complete', models.BooleanField(default=False)),
                ('redaction_log', models.TextField(blank=True)),
                ('be_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redacted_sets', to='api.BESession')),
            ],
        ),
        migrations.AddField(
            model_name='feature',
            name='source_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='api.File'),
        ),
    ]
